!function(e){var n={};function t(i){if(n[i])return n[i].exports;var s=n[i]={i:i,l:!1,exports:{}};return e[i].call(s.exports,s,s.exports,t),s.l=!0,s.exports}t.m=e,t.c=n,t.d=function(e,n,i){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:i})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(t.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var s in e)t.d(i,s,function(n){return e[n]}.bind(null,s));return i},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="",t(t.s=3)}([function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return Recipe}));class Recipe{constructor(e){this.id=e}async getRecipe(){try{const e=await fetch("https://forkify-api.herokuapp.com/api/get?rId="+this.id),n=await e.json();this.title=n.recipe.title,this.author=n.recipe.publisher,this.img=n.recipe.image_url,this.url=n.recipe.source_url,this.ingredients=n.recipe.ingredients}catch(e){alert("Something went wrong")}}calcTime(){const e=this.ingredients.length,n=Math.ceil(e/3);this.time=15*n}calcServings(){this.servings=4}parseIngredients(){const unitsLong=["tablespoons","tablespoon","ounces","ounce","teaspoons","teaspoon","cups","pounds"],unitsShort=["tbsp","tbsp","oz","oz","tsp","tsp","cup","pound"],units=[...unitsShort,"kg","g"],newIngredients=this.ingredients.map(el=>{let ingredient=el.toLowerCase();unitsLong.forEach((e,n)=>{ingredient=ingredient.replace(e,unitsShort[n])}),ingredient=ingredient.replace(/ *\([^)]*\) */g," ");const arrIng=ingredient.split(" "),unitIndex=arrIng.findIndex(e=>units.includes(e));let objIng;if(unitIndex>-1){const arrCount=arrIng.slice(0,unitIndex);let count;count=1===arrCount.length?eval(arrIng[0].replace("-","+")):eval(arrIng.slice(0,unitIndex).join("+")),objIng={count:count,unit:arrIng[unitIndex],ingredient:arrIng.slice(unitIndex+1).join(" ")}}else parseInt(arrIng[0],10)?objIng={count:parseInt(arrIng[0],10),unit:"",ingredient:arrIng.slice(1).join(" ")}:-1===unitIndex&&(objIng={count:1,unit:"",ingredient:ingredient});return objIng});this.ingredients=newIngredients}updateServings(e){const n="dec"===e?this.servings-1:this.servings+1;this.ingredients.forEach(e=>{e.count*=n/this.servings}),this.servings=n}}},function(e,n,t){(function(n){var t=n&&n.pid?n.pid.toString(36):"";function i(){var e=Date.now(),n=i.last||e;return i.last=e>n?e:n+1}e.exports=e.exports.default=function(e,n){return(e||"")+""+t+i().toString(36)+(n||"")},e.exports.process=function(e,n){return(e||"")+t+i().toString(36)+(n||"")},e.exports.time=function(e,n){return(e||"")+i().toString(36)+(n||"")}}).call(this,t(2))},function(e,n){var t,i,s=e.exports={};function r(){throw new Error("setTimeout has not been defined")}function c(){throw new Error("clearTimeout has not been defined")}function o(e){if(t===setTimeout)return setTimeout(e,0);if((t===r||!t)&&setTimeout)return t=setTimeout,setTimeout(e,0);try{return t(e,0)}catch(n){try{return t.call(null,e,0)}catch(n){return t.call(this,e,0)}}}!function(){try{t="function"==typeof setTimeout?setTimeout:r}catch(e){t=r}try{i="function"==typeof clearTimeout?clearTimeout:c}catch(e){i=c}}();var a,l=[],u=!1,p=-1;function d(){u&&a&&(u=!1,a.length?l=a.concat(l):p=-1,l.length&&g())}function g(){if(!u){var e=o(d);u=!0;for(var n=l.length;n;){for(a=l,l=[];++p<n;)a&&a[p].run();p=-1,n=l.length}a=null,u=!1,function(e){if(i===clearTimeout)return clearTimeout(e);if((i===c||!i)&&clearTimeout)return i=clearTimeout,clearTimeout(e);try{i(e)}catch(n){try{return i.call(null,e)}catch(n){return i.call(this,e)}}}(e)}}function h(e,n){this.fun=e,this.array=n}function _(){}s.nextTick=function(e){var n=new Array(arguments.length-1);if(arguments.length>1)for(var t=1;t<arguments.length;t++)n[t-1]=arguments[t];l.push(new h(e,n)),1!==l.length||u||o(g)},h.prototype.run=function(){this.fun.apply(null,this.array)},s.title="browser",s.browser=!0,s.env={},s.argv=[],s.version="",s.versions={},s.on=_,s.addListener=_,s.once=_,s.off=_,s.removeListener=_,s.removeAllListeners=_,s.emit=_,s.prependListener=_,s.prependOnceListener=_,s.listeners=function(e){return[]},s.binding=function(e){throw new Error("process.binding is not supported")},s.cwd=function(){return"/"},s.chdir=function(e){throw new Error("process.chdir is not supported")},s.umask=function(){return 0}},function(e,n,t){"use strict";t.r(n);class i{constructor(e){this.query=e}async getResults(){try{const e=await fetch("https://forkify-api.herokuapp.com/api/search?&q="+this.query),n=await e.json();this.result=n.recipes}catch(e){alert(e)}}}var s=t(0),r=t(1),c=t.n(r);class o{constructor(){this.items=[]}addItem(e,n,t){const i={id:c()(),count:e,unit:n,ingredient:t};return this.items.push(i),i}deleteItem(e){const n=this.items.findIndex(n=>n.id===e);this.items.splice(n,1)}updateCount(e,n){this.items.find(n=>n.id===e).count=n}}class a{constructor(){this.likes=[]}addLike(e,n,t,i){const s={id:e,title:n,author:t,img:i};return this.likes.push(s),this.persistData(),s}deleteLike(e){const n=this.likes.findIndex(n=>n.id===e);this.likes.splice(n,1),this.persistData()}isLiked(e){return-1!==this.likes.findIndex(n=>n.id===e)}getNumLikes(){return this.likes.length}persistData(){localStorage.setItem("likes",JSON.stringify(this.likes))}readStorage(){const e=JSON.parse(localStorage.getItem("likes"));e&&(this.likes=e)}}const l={searchForm:document.querySelector(".search"),searchInput:document.querySelector(".search__field"),searchRes:document.querySelector(".results"),resultLeftSide:document.querySelector(".results__list"),searchResPages:document.querySelector(".results__pages"),recipe:document.querySelector(".recipe"),shopping:document.querySelector(".shopping__list"),likesMenu:document.querySelector(".likes__field"),likesList:document.querySelector(".likes__list")},u=e=>{e.insertAdjacentHTML("afterbegin","\n    <div class='loader'>\n    <svg>\n    <use href=\"img/icons.svg#icon-cw\"></use>\n    </svg>\n    </div>\n    ")},p=()=>{const e=document.querySelector(".loader");e&&e.parentElement.removeChild(e)},d=()=>{l.resultLeftSide.innerHTML="",l.searchResPages.innerHTML=""},g=e=>{const n=`\n        <li>\n            <a class="results__link" href="#${e.recipe_id}">\n            <figure class="results__fig">\n                 <img src="${e.image_url}" alt="${e.image_url}">\n                    </figure>\n             <div class="results__data">\n             <h4 class="results__name">${e.title}</h4>\n               <p class="results__author">${e.publisher}</p>\n                   </div>\n               </a>\n        </li>\n               `;l.resultLeftSide.insertAdjacentHTML("beforeend",n)},h=(e,n)=>`\n      <button class="btn-inline results__btn--${n}" data-goto=${"prev"===n?e-1:e+1}>\n      <span>Page ${"prev"===n?e-1:e+1}</span>\n          <svg class="search__icon">\n              <use href="img/icons.svg#icon-triangle-${"prev"===n?"left":"right"}"></use>\n          </svg>\n      </button>\n     \n`,_=(e,n=1,t=10)=>{const i=(n-1)*t,s=n*t;e.slice(i,s).forEach(g),((e,n,t)=>{const i=Math.ceil(n/t);let s;1===e&&i>1?s=h(e,"next"):e<i?s=`\n    ${h(e,"prev")}\n    ${h(e,"next")}\n    `:e===i&&i>1&&(s=h(e,"prev")),l.searchResPages.insertAdjacentHTML("afterbegin",s)})(n,e.length,t)},f=e=>{document.querySelector(".recipe__info-data--people").textContent=e.servings;Array.from(document.querySelectorAll(".recipe__count")).forEach((n,t)=>{n.textContent=e.ingredients[t].count})},v=e=>{const n=e?"icon-heart":"icon-heart-outlined";document.querySelector(".recipe__love use").setAttribute("href","img/icons.svg#"+n)},m=e=>{l.likesMenu.style.visibility=e>0?"visible":"hidden"},b=e=>{const n=`\n            <li>\n            <a class="likes__link" href="#${e.id}">\n                <figure class="likes__fig">\n                    <img src="${e.img}" alt="${e.title}">\n                </figure>\n                <div class="likes__data">\n                    <h4 class="likes__name">${e.title}</h4>\n                    <p class="likes__author">${e.author}</p>\n                </div>\n            </a>\n            </li>\n    `;l.likesList.insertAdjacentHTML("beforeend",n)},k={},y=async()=>{const e=l.searchInput.value;if(e){k.search=new i(e),l.searchInput.value="",d(),u(l.searchRes);try{await k.search.getResults(),p(),_(k.search.result)}catch(e){alert("Something wrong with the search"),p()}}};l.searchForm.addEventListener("submit",e=>{e.preventDefault(),y()}),l.searchResPages.addEventListener("click",e=>{const n=e.target.closest(".btn-inline");if(n){const e=parseInt(n.dataset.goto,10);d(),_(k.search.result,e)}});const w=async()=>{const e=window.location.hash.replace("#","");if(e){l.recipe.innerHTML="",u(l.recipe),k.search&&(e=>{Array.from(document.querySelectorAll(".results__link")).forEach(e=>{e.classList.remove("results__link--active")}),document.querySelector(`.results__link[href="#${e}"]`).classList.add("results__link--active")})(e),k.recipe=new s.a(e);try{await k.recipe.getRecipe(),k.recipe.parseIngredients(),k.recipe.calcTime(),k.recipe.calcServings(),p(),((e,n)=>{const t=`\n        <figure class="recipe__fig">\n            <img src="${e.img}" alt="${e.title}" class="recipe__img">\n            <h1 class="recipe__title">\n                <span>${e.title}</span>\n            </h1>\n        </figure>\n\n        <div class="recipe__details">\n            <div class="recipe__info">\n                <svg class="recipe__info-icon">\n                    <use href="img/icons.svg#icon-stopwatch"></use>\n                </svg>\n                <span class="recipe__info-data recipe__info-data--minutes">${e.time}</span>\n                <span class="recipe__info-text"> minutes</span>\n            </div>\n            <div class="recipe__info">\n                <svg class="recipe__info-icon">\n                    <use href="img/icons.svg#icon-man"></use>\n                </svg>\n                <span class="recipe__info-data recipe__info-data--people">${e.servings}</span>\n                <span class="recipe__info-text"> servings</span>\n\n                <div class="recipe__info-buttons">\n                    <button class="btn-tiny btn-decrease">\n                        <svg>\n                            <use href="img/icons.svg#icon-circle-with-minus"></use>\n                        </svg>\n                    </button>\n                    <button class="btn-tiny btn-increase">\n                        <svg>\n                            <use href="img/icons.svg#icon-circle-with-plus"></use>\n                        </svg>\n                    </button>\n                </div>\n\n            </div>\n            <button class="recipe__love">\n                <svg class="header__likes">\n                    <use href="img/icons.svg#icon-heart${n?"":"-outlined"}"></use>\n                </svg>\n            </button>\n        </div>\n\n        <div class="recipe__ingredients">\n            <ul class="recipe__ingredient-list">\n                ${e.ingredients.map(e=>{return`\n    <li class="recipe__item">\n        <svg class="recipe__icon">\n            <use href="img/icons.svg#icon-check"></use>\n        </svg>\n        <div class="recipe__count">${(n=e).count}</div>\n        <div class="recipe__ingredient">\n            <span class="recipe__unit">${n.unit}</span>\n            ${n.ingredient}\n        </div>\n    </li>\n`;var n}).join("")}\n            </ul>\n\n            <button class="btn-small recipe__btn recipe__btn--add">\n                <svg class="search__icon">\n                    <use href="img/icons.svg#icon-shopping-cart"></use>\n                </svg>\n                <span>Add to shopping list</span>\n            </button>\n        </div>\n\n        <div class="recipe__directions">\n            <h2 class="heading-2">How to cook it</h2>\n            <p class="recipe__directions-text">\n                This recipe was carefully designed and tested by\n                <span class="recipe__by">${e.author}</span>. Please check out directions at their website.\n            </p>\n            <a class="btn-small recipe__btn" href="${e.url}" target="_blank">\n                <span>Directions</span>\n                <svg class="search__icon">\n                    <use href="img/icons.svg#icon-triangle-right"></use>\n                </svg>\n\n            </a>\n        </div>\n    `;l.recipe.insertAdjacentHTML("afterbegin",t)})(k.recipe)}catch(e){alert("error processing recipe!")}}};["hashchange","load"].forEach(e=>window.addEventListener(e,w));const S=()=>{k.list||(k.list=new o),k.recipe.ingredients.forEach(e=>{(e=>{const n=`\n    <li class="shopping__item" data-itemid=${e.id}>\n    <div class="shopping__count">\n        <input type="number" value="${e.count}" step="${e.count}" class="shopping__count-value">\n        <p>${e.unit}</p>\n    </div>\n    <p class="shopping__description">${e.ingredient}</p>\n    <button class="shopping__delete btn-tiny">\n        <svg>\n            <use href="img/icons.svg#icon-circle-with-cross"></use>\n        </svg>\n    </button>\n</li>\n    `;l.shopping.insertAdjacentHTML("beforeend",n)})(k.list.addItem(e.count,e.unit,e.ingredient))})};l.shopping.addEventListener("click",e=>{const n=e.target.closest(".shopping__item").dataset.itemid;if(e.target.matches(".shopping__delete *"))k.list.deleteItem(n),(e=>{const n=document.querySelector(`[data-itemid="${e}"]`);n&&n.parentElement.removeChild(n)})(n);else if(e.target.matches(".shopping__count-value")){const t=parseFloat(e.target.value,10);k.list.updateCount(n,t)}});const I=()=>{k.likes||(k.likes=new a);const e=k.recipe.id;if(k.likes.isLiked(e))k.likes.deleteLike(e),v(!1),(e=>{const n=document.querySelector(`.likes__link[href="#${e}"]`).parentElement;n&&n.parentElement.removeChild(n)})(e);else{const n=k.likes.addLike(e,k.recipe.title,k.recipe.author,k.recipe.img);v(!0),b(n)}m(k.likes.getNumLikes())};window.addEventListener("load",()=>{k.likes=new a,k.likes.readStorage(),m(k.likes.getNumLikes()),k.likes.likes.forEach(e=>b(e))}),l.recipe.addEventListener("click",e=>{e.target.matches(".btn-decrease, .btn-decrease *")?k.recipe.servings>1&&(k.recipe.updateServings("dec"),f(k.recipe)):e.target.matches(".btn-increase, .btn-increase *")?(k.recipe.updateServings("inc"),f(k.recipe)):e.target.matches(".recipe__btn--add, .recipe__btn--add *")?S():e.target.matches(".recipe__love, .recipe__love *")&&I()})}]);